// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: OrderManagementSystem/availablequantity/availablequantity.proto

package availablequantity

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product string `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDescGZIP(), []int{0}
}

func (x *Product) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

type CheckProductAvailableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pr *Product `protobuf:"bytes,1,opt,name=pr,proto3" json:"pr,omitempty"`
}

func (x *CheckProductAvailableRequest) Reset() {
	*x = CheckProductAvailableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckProductAvailableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckProductAvailableRequest) ProtoMessage() {}

func (x *CheckProductAvailableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckProductAvailableRequest.ProtoReflect.Descriptor instead.
func (*CheckProductAvailableRequest) Descriptor() ([]byte, []int) {
	return file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDescGZIP(), []int{1}
}

func (x *CheckProductAvailableRequest) GetPr() *Product {
	if x != nil {
		return x.Pr
	}
	return nil
}

type CheckProductAvailableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qty int32 `protobuf:"varint,1,opt,name=qty,proto3" json:"qty,omitempty"`
}

func (x *CheckProductAvailableResponse) Reset() {
	*x = CheckProductAvailableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckProductAvailableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckProductAvailableResponse) ProtoMessage() {}

func (x *CheckProductAvailableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckProductAvailableResponse.ProtoReflect.Descriptor instead.
func (*CheckProductAvailableResponse) Descriptor() ([]byte, []int) {
	return file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDescGZIP(), []int{2}
}

func (x *CheckProductAvailableResponse) GetQty() int32 {
	if x != nil {
		return x.Qty
	}
	return 0
}

type UpdateProductQuantityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pr  *Product `protobuf:"bytes,1,opt,name=pr,proto3" json:"pr,omitempty"`
	Qty int32    `protobuf:"varint,2,opt,name=qty,proto3" json:"qty,omitempty"`
}

func (x *UpdateProductQuantityRequest) Reset() {
	*x = UpdateProductQuantityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductQuantityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductQuantityRequest) ProtoMessage() {}

func (x *UpdateProductQuantityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductQuantityRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductQuantityRequest) Descriptor() ([]byte, []int) {
	return file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateProductQuantityRequest) GetPr() *Product {
	if x != nil {
		return x.Pr
	}
	return nil
}

func (x *UpdateProductQuantityRequest) GetQty() int32 {
	if x != nil {
		return x.Qty
	}
	return 0
}

type UpdateProductQuantityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateProductQuantityResponse) Reset() {
	*x = UpdateProductQuantityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductQuantityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductQuantityResponse) ProtoMessage() {}

func (x *UpdateProductQuantityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductQuantityResponse.ProtoReflect.Descriptor instead.
func (*UpdateProductQuantityResponse) Descriptor() ([]byte, []int) {
	return file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateProductQuantityResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_OrderManagementSystem_availablequantity_availablequantity_proto protoreflect.FileDescriptor

var file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDesc = []byte{
	0x0a, 0x3f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x22, 0x23, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x4a, 0x0a, 0x1c, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x02, 0x70, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x02, 0x70, 0x72, 0x22, 0x31, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x74, 0x79, 0x22, 0x5c, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x02, 0x70, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x02, 0x70, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x71, 0x74, 0x79, 0x22, 0x39, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x32, 0x9b, 0x02, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x7c, 0x0a, 0x15, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x7d, 0x0a, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x13, 0x5a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDescOnce sync.Once
	file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDescData = file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDesc
)

func file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDescGZIP() []byte {
	file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDescOnce.Do(func() {
		file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDescData = protoimpl.X.CompressGZIP(file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDescData)
	})
	return file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDescData
}

var file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_OrderManagementSystem_availablequantity_availablequantity_proto_goTypes = []interface{}{
	(*Product)(nil),                       // 0: availablequantity.Product
	(*CheckProductAvailableRequest)(nil),  // 1: availablequantity.CheckProductAvailableRequest
	(*CheckProductAvailableResponse)(nil), // 2: availablequantity.CheckProductAvailableResponse
	(*UpdateProductQuantityRequest)(nil),  // 3: availablequantity.UpdateProductQuantityRequest
	(*UpdateProductQuantityResponse)(nil), // 4: availablequantity.UpdateProductQuantityResponse
}
var file_OrderManagementSystem_availablequantity_availablequantity_proto_depIdxs = []int32{
	0, // 0: availablequantity.CheckProductAvailableRequest.pr:type_name -> availablequantity.Product
	0, // 1: availablequantity.UpdateProductQuantityRequest.pr:type_name -> availablequantity.Product
	1, // 2: availablequantity.CheckProductAvailableService.checkProductAvailable:input_type -> availablequantity.CheckProductAvailableRequest
	3, // 3: availablequantity.CheckProductAvailableService.updateProductAvailable:input_type -> availablequantity.UpdateProductQuantityRequest
	2, // 4: availablequantity.CheckProductAvailableService.checkProductAvailable:output_type -> availablequantity.CheckProductAvailableResponse
	4, // 5: availablequantity.CheckProductAvailableService.updateProductAvailable:output_type -> availablequantity.UpdateProductQuantityResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_OrderManagementSystem_availablequantity_availablequantity_proto_init() }
func file_OrderManagementSystem_availablequantity_availablequantity_proto_init() {
	if File_OrderManagementSystem_availablequantity_availablequantity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckProductAvailableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckProductAvailableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductQuantityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductQuantityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_OrderManagementSystem_availablequantity_availablequantity_proto_goTypes,
		DependencyIndexes: file_OrderManagementSystem_availablequantity_availablequantity_proto_depIdxs,
		MessageInfos:      file_OrderManagementSystem_availablequantity_availablequantity_proto_msgTypes,
	}.Build()
	File_OrderManagementSystem_availablequantity_availablequantity_proto = out.File
	file_OrderManagementSystem_availablequantity_availablequantity_proto_rawDesc = nil
	file_OrderManagementSystem_availablequantity_availablequantity_proto_goTypes = nil
	file_OrderManagementSystem_availablequantity_availablequantity_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CheckProductAvailableServiceClient is the client API for CheckProductAvailableService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheckProductAvailableServiceClient interface {
	CheckProductAvailable(ctx context.Context, in *CheckProductAvailableRequest, opts ...grpc.CallOption) (*CheckProductAvailableResponse, error)
	UpdateProductAvailable(ctx context.Context, in *UpdateProductQuantityRequest, opts ...grpc.CallOption) (*UpdateProductQuantityResponse, error)
}

type checkProductAvailableServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCheckProductAvailableServiceClient(cc grpc.ClientConnInterface) CheckProductAvailableServiceClient {
	return &checkProductAvailableServiceClient{cc}
}

func (c *checkProductAvailableServiceClient) CheckProductAvailable(ctx context.Context, in *CheckProductAvailableRequest, opts ...grpc.CallOption) (*CheckProductAvailableResponse, error) {
	out := new(CheckProductAvailableResponse)
	err := c.cc.Invoke(ctx, "/availablequantity.CheckProductAvailableService/checkProductAvailable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkProductAvailableServiceClient) UpdateProductAvailable(ctx context.Context, in *UpdateProductQuantityRequest, opts ...grpc.CallOption) (*UpdateProductQuantityResponse, error) {
	out := new(UpdateProductQuantityResponse)
	err := c.cc.Invoke(ctx, "/availablequantity.CheckProductAvailableService/updateProductAvailable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheckProductAvailableServiceServer is the server API for CheckProductAvailableService service.
type CheckProductAvailableServiceServer interface {
	CheckProductAvailable(context.Context, *CheckProductAvailableRequest) (*CheckProductAvailableResponse, error)
	UpdateProductAvailable(context.Context, *UpdateProductQuantityRequest) (*UpdateProductQuantityResponse, error)
}

// UnimplementedCheckProductAvailableServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCheckProductAvailableServiceServer struct {
}

func (*UnimplementedCheckProductAvailableServiceServer) CheckProductAvailable(context.Context, *CheckProductAvailableRequest) (*CheckProductAvailableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckProductAvailable not implemented")
}
func (*UnimplementedCheckProductAvailableServiceServer) UpdateProductAvailable(context.Context, *UpdateProductQuantityRequest) (*UpdateProductQuantityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProductAvailable not implemented")
}

func RegisterCheckProductAvailableServiceServer(s *grpc.Server, srv CheckProductAvailableServiceServer) {
	s.RegisterService(&_CheckProductAvailableService_serviceDesc, srv)
}

func _CheckProductAvailableService_CheckProductAvailable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckProductAvailableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckProductAvailableServiceServer).CheckProductAvailable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/availablequantity.CheckProductAvailableService/CheckProductAvailable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckProductAvailableServiceServer).CheckProductAvailable(ctx, req.(*CheckProductAvailableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CheckProductAvailableService_UpdateProductAvailable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProductQuantityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckProductAvailableServiceServer).UpdateProductAvailable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/availablequantity.CheckProductAvailableService/UpdateProductAvailable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckProductAvailableServiceServer).UpdateProductAvailable(ctx, req.(*UpdateProductQuantityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CheckProductAvailableService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "availablequantity.CheckProductAvailableService",
	HandlerType: (*CheckProductAvailableServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "checkProductAvailable",
			Handler:    _CheckProductAvailableService_CheckProductAvailable_Handler,
		},
		{
			MethodName: "updateProductAvailable",
			Handler:    _CheckProductAvailableService_UpdateProductAvailable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "OrderManagementSystem/availablequantity/availablequantity.proto",
}
